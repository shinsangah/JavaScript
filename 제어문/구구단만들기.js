// // 23.02.13 공부
// /* 프로그래밍 핵심 개념 in JavaScript */
// // [제어문] 18. 구구단 만들기

// 실습 설명
// 반복문을 사용해서 구구단 프로그램을 만들어 봅시다.
// for문과 while문 중 어떤 반복문을 사용해도 상관없습니다.

// 실습 결과
// 실행하면 아래와 같은 결과물이 출력되어야 합니다.

// 1 * 1 = 1
// 1 * 2 = 2
// 1 * 3 = 3
// .
// .
// .
// 9 * 7 = 63
// 9 * 8 = 72
// 9 * 9 = 81

// 주의 사항
// : 자동 채점 과제이기 때문에, 문제의 조건에 정확히 따라주시기 바랍니다.
// 줄 바꿈과 마침표, 띄어쓰기까지도 주의해 주세요!

// 참고로 이 문제는 '중첩 반복문' 이라는 개념을 사용해야 하는데요.
// 중첩 반복문은 반복문의 동작 부분 안에 또 다른 반복문을 넣는 것을 이야기합니다.
// 따로 설명해 드리지 않은 개념이지만, 조금 고민하다 보면 여러분이 직접 알아낼 수도 있습니다.
// 도저히 생각이 안 난다면 힌트를 참고해 주세요!


// 해설

// 중첩 while문이라는 개념이 조금 어렵게 느껴지셨나요?
// 그럼 우선 for문 하나만 사용해서, '1 * 1 = 1'부터 '1 * 9 = 9'까지 1단만 출력해 봅시다.

// for (let j = 1; j <= 9; j++) {
//   console.log(`1 * ${j} = ${1 * j}`);
// }

// 여기서 조금 발전시키면 1단부터 9단까지 할 수 있는데요.

// console.log(`1 * ${j} = ${1 * j}`);

// 위 코드를 보시면 지금은 1단이기 때문에 그냥 1로 고정된 부분들이 있습니다.
// 1단부터 9단까지 하기 위해서는 고정된 1이 아니라 바뀌는 변수를 넣어 줘야겠죠?
// 이걸 구현하기 위해 또 다른 반복문으로 감싸면 되는 것입니다!

// 모범 답안

for (let i = 1; i <= 9; i++) {
  for (let j = 1; j <= 9; j++) {
    console.log(`${i} * ${j} = ${i * j}`);
  }
}

// 이 코드를 while문으로 작성한다면 아래와 같이 작성할 수 있겠죠?

let i = 1;
while (i <= 9) {
  let j = 1;
  while (j <= 9) {
    console.log(`${i} * ${j} = ${i * j}`);
    j++;
  }
  i++;
}