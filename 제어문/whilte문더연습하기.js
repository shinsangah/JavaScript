// // 23.02.12 공부
// /* 프로그래밍 핵심 개념 in JavaScript */
// // [제어문] 15. while문 더 연습하기


// 실습 설명
// 정수 N의 약수는 N을 나누었을 때 나누어 떨어지는 수입니다.
// 만약 정수 i가 정수 N의 약수라면, N을 i로 나누었을 때 나머지가 0이 나와야 하는 거죠.

// while문을 활용해서 정수 180의 약수를 모두 출력하고,
// 총 몇 개의 약수가 있는지 출력하는 프로그램을 작성해 보세요.

// 실습 결과
// 코드를 잘 작성했다면 결과는 콘솔에 아래와 같이 출력되어야 합니다.

// 1
// 2
// 3
// 4
// 5
// 6
// 9
// 10
// 12
// 15
// 18
// 20
// 30
// 36
// 45
// 60
// 90
// 180
// 180의 약수는 총 18개입니다.

// 주의 사항: 자동 채점 과제이기 때문에, 문제의 조건에 정확히 따라주시기 바랍니다.
// 줄 바꿈과 마침표, 띄어쓰기까지도 주의해 주세요!


// 해설
// 주어진 문제를 해결하기 위해서 천천히 단계별로 코드를 구성해 봅시다.

// 1. 약수 모두 출력하기
// 약수를 세는 것은 일단 미루어 두고, 약수를 모두 출력하는 코드부터 작성해 봅시다.

// 180의 약수를 모두 찾아야 하는데요. 그러면 180이 1로 나누어떨어지는지 확인하고,
// 2로 나누어떨어지는지 확인하고, 3으로 나누어떨어지는지 확인하고 이런 식으로 180까지 나누어떨어지는지 확인하면 됩니다.

// '나누어 떨어진다'는 건 코드로 어떻게 나타낼까요?
// 변수 i가 4로 나누어떨어진다면, i % 4 === 0은 true가 나올 것입니다.

// 그렇다면 약수를 모두 출력하기 위해서 while문과 if문을 활용해서 다음과 같이 코드를 작성할 수 있겠죠?

const N = 180;
// 여기에 코드를 작성해 주세요.
let i = 1;

while (i <= N) {
  if (N % i === 0) {
    console.log(i);
  }
  i += 1;
}

// 참고로 i += 1은 if문 밖에 있어야 합니다.
// 그렇지 않으면 끝이 안 나는 "무한 루프"에 빠지게 됩니다.주의해 주세요!

// 2. 약수 세기
// 그런데 이 문제에서는 약수를 모두 출력하는 것뿐만 아니라 약수의 총 개수도 출력해야 합니다.
// 그러기 위해서는 개수를 세기 위한 변수를 하나 만들어야겠죠? 변수 이름은 count 같은 게 좋을 것 같습니다.
// 이 count 변수는 어떻게 활용해야 할까요? if문 안쪽에서 180의 약수를 발견했을 때마다 1씩 늘려 주면 될 것 같네요.

const N = 180;
// 여기에 코드를 작성해 주세요.
let i = 1;
let count = 0;

while (i <= N) {
  if (N % i === 0) {
    console.log(i);
    count++;
  }
  i += 1;
}

// 3. 문장 출력하기
// 끝으로 마지막 문장을 출력해야 합니다.
// 마지막 문장은 과제의 출력 예시를 참고해서 템플릿 문자열을 활용하면 좀 더 깔끔하게 코드를 작성할 수 있겠죠?

// 모범 답안

const N = 180;
// 여기에 코드를 작성해 주세요.
let i = 1;
let count = 0;

while (i <= N) {
  if (N % i === 0) {
    console.log(i);
    count++;
  }
  i += 1;
}

console.log(`${N}의 약수는 총 ${count}개입니다.`);

// // 1
// // 2
// // 3
// // 4
// // 5
// // 6
// // 9
// // 10
// // 12
// // 15
// // 18
// // 20
// // 30
// // 36
// // 45
// // 60
// // 90
// // 180
// // 180의 약수는 총 18개입니다.