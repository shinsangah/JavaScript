// 23.02.12 공부
/* 프로그래밍 핵심 개념 in JavaScript */
// [제어문] 10. for문 Tip

for (let i = 1; i <= 10; i++) {
  console.log(`${i} 코드잇 최고!`);
}

// 여기 지난 시간에 배운 for 반복문 코드가 있습니다.
// 이 코드를 보면서 for 반복문에 대해서 조금만 더 살펴봅시다.


// 1. 추가동작부분을 꼭 채울 필요는 없다.
// for 반복문에서 추가동작부분은 사실 꼭 채울 필요는 없습니다.
// 추가동작부분에서 i를 1씩 증가시키는 부분이 여기 동작부분에 들어가도 문제는 없습니다.

for (let i = 1; i <= 10;) {
  console.log(`${i} 코드잇 최고!`);
  i++;
}

// 위 코드 처럼 동작부분 아래에 i를 증가시켜도 아무런 문제 없이 똑같은 결과가 출력이 되는데요.
// 동작부분에서 i를 증가시켰고, 추가동작부분에는 아무것도 작성하지 않았기 때문에 그냥 추가 동작부분에서 아무 동작도 하지 않는 것입니다.
// 하지만, for문의 특성상, 이 추가동작부분이 있기 때문에 여기 동작부분에서는 실제로 반복하고자하는 내용들만 집중하고
// 어떤 조건과 관련된 부분은 이 소괄호에 집중하면서 좀 더 목적에 맞는 코드를 작성할 수 있게 되는 것이죠.


// 2. 초기화부분에서 생성한 변수는 for문의 로컬변수다.
// for 반복문의 초기화 부분에서 생성한 변수는 for문 안에서의 로컬변수가 됩니다.

for (let i = 1; i <= 10; i++) {
  console.log(`${i} 코드잇 최고!`);
}

console.log(i); // Error !!

// for문 안에서 생성한 로컬변수이기 때문에 for 반복문이 종료되고 나서
// for 반복문 밖에서 변수를 사용하려고 하면 오류가 발생한다는 점.
// 사소하지만 이런 부분들도 꼭 기억해 주세요!


// 3. 초기화 부분도 반드시 채울 필요는 없다. 단,
// for 반복문에서 초기화부분도 사실 꼭 채울 필요는 없습니다.

let i = 1;
for (; i <= 10; i++) {
  console.log(`${i} 코드잇 최고!`);
}

// 위 코드 처럼 for 반복문의 로컬변수를 꼭 활용하지 않아도 반복문 밖에 있는 글로벌 변수를 활용해도 아무런 문제없이 같은 결과를 출력합니다.
// 단! for문의 소괄호 안쪽 가장 첫번째 세미콜론은 생략할 수 없습니다.
// 저 세미콜론은 초기화부분과, 조건부분을 구분하는 세미콜론이기 때문에 초기화 부분의 코드를 생략하더라도 세미콜론 만큼은 생략해선 안되는 것이죠!
// for문의 소괄호 안쪽은 반드시 세미콜론 2개가 필요합니다. 그렇지 않으면 실행 오류를 만나게 된다는 점. 꼭 기억해 주세요!