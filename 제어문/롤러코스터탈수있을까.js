// 23.02.11 공부
/* 프로그래밍 핵심 개념 in JavaScript */
// [제어문] 02. 롤러코스터, 탈 수 있을까?

// 실습 설명

// 규재는 오랜만에 동생 규원이와 놀이공원을 방문했습니다.
// 이것저것 놀이공원의 기구들을 즐기다가 가장 기대했던 롤러코스터에 탑승하려고 하는데,
// 입구에서 키 제한 검사를 하고 있었습니다. 또래 친구들 보다 키가 작은 규원이는 행여나 놀이기구를 못 탈까봐
// 차례를 기다리는 대기 줄에서 긴장의 끈을 놓지 못하고 있습니다.

// 이 롤러코스터는 140cm 이상만 탑승할 수 있다고 하는데요. 놀이기구를 타고 싶은 마음은 간절하지만
// 안전상의 문제로 위험한 상황이 발생할 수 있으니, 만약 기준을 통과하지 못한다면 아쉽지만 다음을 기약하는 것이 좋겠죠?
// 그럼, if문을 활용해서 키 140cm를 기준으로 탑승 가능 유무를 알려주는 checkHeight 함수를 작성해 주세요.

// 실습 결과
// 코드를 잘 작성하셨다면 아래와 같은 결과가 출력되어야 합니다.

// 탑승이 가능합니다.
// 탑승이 불가능합니다.
// 탑승이 가능합니다.

// 주의 사항: 자동 채점 과제이기 때문에, 문제의 조건에 정확히 따라주시기 바랍니다.
// 줄 바꿈과 마침표, 띄어쓰기까지도 주의해 주세요!

// 파라미터 height을 활용하는 checkHeight 함수를 완성하세요.
function checkHeight(height) {
  if (height >= 140) {
    console.log('탑승이 가능합니다.');
  } else {
    console.log('탑승이 불가능합니다.');
  }
}

// 테스트 코드
checkHeight(140);
checkHeight(135);
checkHeight(170);



// 모범답안 2
// 파라미터 height을 활용하는 checkHeight 함수를 완성하세요.

function checkHeight(height) {
  const LIMIT = 140;
  let passMessage = '탑승이 가능합니다.';
  let failMessage = '탑승이 불가능합니다.';

  if (height >= LIMIT) {
    console.log(passMessage);
  } else {
    console.log(failMessage);
  }
}

checkHeight(140);
checkHeight(135);
checkHeight(170);

// 위 코드를 보면 비록 코드는 길어졌지만,
// 각 값들의 의미를 부여하기 때문에 다른 사람들에게 보여주거나
// 혹은 내가 이 코드를 다시 보게 될 때도 좀 더 이해하기 편한 코드가 될 수 있습니다.

// 그리고 혹여나 제한 키의 값을 수정하거나 출력 메시지를 수정할 때도,
// 이렇게 한곳에 모여있는 변수 값들을 변경할 수 있으면 if문 안에서
// 하나하나 찾아서 수정하는 것보다는 상대적으로 더 편리하게 수정을 할 수 있겠죠?

