// 23.02.11 공부
/* 프로그래밍 핵심 개념 in JavaScript */
// [추상화] 13. 상수

// 상수 (constant) - 절대 변하지 않는 항상 일정한 값
const PI = 3.14; //원주율 (상수)
let radius = 0; //반지름

// pi = 3;
// 상수의 값을 이렇게 재할당 하려고 할 때는 실행했을 때 오류가 난다.
// 그래서 상수의 값을 보호할 수가 있다. 

// const pi;
// 이렇게 값을 변경할 수가 없기 때문에 선언 할 때 값을 할당해주지 않아도
// 실행해봐도 오류가 나온다.

// 상수는 이름을 지을 때 대문자, 밑줄로 작성해주는 암묵적인 규칙이 있다.
// 이름에 들어가는 모든 알파벳을 대문자로 쓰고, 2개 이상의 단어가 있을 때는 밑줄로 두 단어를 구분.
// 상수와 변수를 구분하기 위함; ex) const MY_NUMBER, const PI
// 선언할 때는 const 라는 키워드로 변수, 상수 구분할 수 있지만,
// 실제로 상수를 사용할 때는 키워드 없이 상수 이름으로 사용되기 때문에 변수, 상수 구분하기 위한 이름규칙 필요함.

// 변수에 들어갈 자료형이 아직 결정되지 않았거나, 일정하지 않았을 때
// 반지름이 처음에는 빈 값이라는 것을 명시적으로 null 값을 할당하여 표현

// 빈 값을 표현하면서 변수에 일정하게 들어가는 값도 자료형으로
// 간접적으로 표현하고 싶을 때, 문자열 '' / 숫자 0 을 할당하는 방법도 있다.
// 지금같은 경우에는 반지름이니까 0을 할당하면 좋다.

// 원의 넓이를 계산하는 함수
function calcualteArea() {
  return PI * radius * radius;
}

// 반지름에 따른 원의 넓이를 출력하는 함수
function printArea() {
  return `반지름이 ${radius}일 때, 원의 넓이는 ${calcualteArea()}`;
}

// radius의 값을 변경해가면서 printArea()의 결과값을
// console에 출력하는 코드입니다.

radius = 4;
console.log(printArea());

radius = 7;
console.log(printArea());

radius = 8;
console.log(printArea());


// '상수' 정리
// 어쩌면 그냥 변수를 선언하고, 나중에 값을 변경하지 않으면 되지 않느냐 라고 할 수 있지만
// 코드를 작성하면서 실제로 나중에 다른 값을 할당할 수도 있고, 혹은 협업을 할 때,
// 다른 사람이 바꿔버릴 수 있는 상황이 생길 수도 있으니까 이렇게 필요한 경우에는 상수를 활용하는 것이 코드를 훨씬 더 안정적으로 만들어 줍니다.
// 이런 것들을 잘 알고 있어야 다른 사람의 코드를 바라볼 때도 이런 디테일한 요소들을 이해할 수 있는 능력이 생기는 것입니다.
// 이런 작은 습관들 하나하나가 여러분들이 작성하는 코드의 수준도 높여준다는 점을 꼭 기억해주세요.