// 23.02.10 공부
/* 프로그래밍 핵심 개념 in JavaScript */
// 13. 연산자 우선순위

// 5+3*6 라는 기본적인 사칙연산의 식이 있을 때
// 곱셉이 먼저, 그 후에 덧셈이 일어난다.
// 이런 개념이 바로 '연산자 우선순위'

// *우선순위 숫자가 클수록 먼저 실행*
// 우선순위	연산자 유형	기호
// 21	그룹	(...)
// ...
// 17	논리 NOT	! ...
// 17	typeof	typeof ...
// 16	거듭제곱	... ** ...
// 15	곱셈	... * ...
// 15	나눗셈	... / ...
// 15	나머지	... % ...
// 14	덧셈	... + ...
// 14	뺄셈	... - ...
// ...
// 12	미만	... < ...
// 12	이하	... <= ...
// 12	초과	... > ...
// 12	이상	... >= ...
// 11	동등	... == ...
// 11	부등	... != ...
// 11	일치	... === ...
// 11	불일치	... !== ...
// ...
// 6	논리 AND	... && ...
// 5	논리 OR	... || ...
// ...
// 3	할당	... = ...

typeof (6 * 2 === 11 || 13 - 7 && !true)
// false
// 가장 높은 우선순위인 괄호 내부를 먼저 연산
// 괄호 내부에서도 다양한 연산자 - 괄호 내부에서 가장 높은 우선순위 NOT 연산자!

typeof (6 * 2 === 11 || 13 - 7 < 7 && false);
// 그 다음으로 높은 우선순위는 사칙연산
// 곱셈과 뺄셈이 있으니 각각의 연산을 실행하면
typeof (12 === 11 || 6 < 7 && false);
// 이제 남은 연산자 중에서 우선순위가 가장 높은 연산자는 비교 연산
// 일치와 미만 연산을 해주면 아래와 같은 결과입니다.
typeof (false || true && false)
// 이제 남은 것은 논리 연산, 자칫 AND와 OR연산이 같은 우선순위라고 착각하는데,
// AND 연산이 OR 연산보다 우선순위가 한 단계 높습니다!
typeof (false || false)
// 연산 결과는 이렇게 false, typeof false 이니까, 결과적으로 괄호 내부의 마지막 연산은
typeof false;
// 이 모든 연산의 결과값은 문자열 'Boolean' 이 되는 것이다.